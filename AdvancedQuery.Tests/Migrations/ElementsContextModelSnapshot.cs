// <auto-generated />
using AdvancedQuery.Tests.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdvancedQuery.Tests.Migrations
{
    [DbContext(typeof(ElementsContext))]
    partial class ElementsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdvancedQuery.Tests.Electron", b =>
                {
                    b.Property<int>("ElectronId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElectronId"));

                    b.Property<int>("ElementId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("ElectronId");

                    b.HasIndex("ElementId");

                    b.ToTable("Electrons", (string)null);
                });

            modelBuilder.Entity("AdvancedQuery.Tests.Element", b =>
                {
                    b.Property<int>("ElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElementId"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<float>("Molar")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Small")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ElementId");

                    b.HasIndex("GroupId");

                    b.ToTable("Elements", (string)null);
                });

            modelBuilder.Entity("AdvancedQuery.Tests.ElementGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ElementGroups", (string)null);
                });

            modelBuilder.Entity("AdvancedQuery.Tests.Electron", b =>
                {
                    b.HasOne("AdvancedQuery.Tests.Element", "Element")
                        .WithMany("Electrons")
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");
                });

            modelBuilder.Entity("AdvancedQuery.Tests.Element", b =>
                {
                    b.HasOne("AdvancedQuery.Tests.ElementGroup", "ElementGroup")
                        .WithMany("Elements")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElementGroup");
                });

            modelBuilder.Entity("AdvancedQuery.Tests.Element", b =>
                {
                    b.Navigation("Electrons");
                });

            modelBuilder.Entity("AdvancedQuery.Tests.ElementGroup", b =>
                {
                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
